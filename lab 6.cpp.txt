#include<iostream>
using namespace std;                                                            

const int rows = 4;
int columns_per_row[rows] = { 5,6,4,3 };
int main() {
	int** arr = new int* [rows], user_id, lab, machine, selection;  // -->Sample run (EDITED)<--
	arr[0] = new int[5];                                            //1. Select option (1) and type 12345 as id (notice that it was added to the matrix)
	arr[1] = new int[6];                                            //2. Select option (1) and type 54321 as id
	arr[2] = new int[4];                                            //3. Select option (1) and type 98765 as id
	arr[3] = new int[3];                                            //4. Select option (3) and type 66666 as id and note that this id isn't in the matrix
	for (int i = 0;i < rows;i++) {                                  //5. Select option (2) and logoff any of option (1)
		for (int j = 0;j < columns_per_row[i];j++) {                //OUTPUT|
			arr[i][j] = 0;                                             //--> 54321  empty  empty  empty  empty  
		}                                                                  //--> empty  12345  empty  empty  empty  empty 
		cout << endl;                                                      //--> empty  empty  empty  empty
	}                                                                          //--> empty  empty  empty
	do {                                                            //6.Select option (3) and type 77777 as id and note that this id isn't in the matrix
		cout << "\nSelect 1 of the following: " << endl;            //OUTPUT|
		cout << "1. Login" << endl;                                       //-->  54321  None  None  None  None 
		cout << "2. Log-off" << endl;                                     //-->  None   12345 None  None  None  None
		cout << "3. Search" << endl;                                      //-->  None   None  None  None  
		cout << "4. Exit" << endl;                                        //-->  None   None  None
		cin >> selection;                                            //7.Select (4) to leave.
		switch (selection) {
		case 1:
			cout << "Enter user's 5-digit id: "; cin >> user_id;
			cout << "\nEnter LAB number: "; cin >> lab;
			cout << "\nEnter station number: "; cin >> machine;
			arr[lab - 1][machine - 1] = user_id;
			for (int i = 0;i < rows;i++) {
				for (int j = 0;j < columns_per_row[i];j++) {
					if (arr[i][j] == 0) {
						cout << " EMPTY  ";
					}
					else {
						cout << arr[i][j] << "      ";
					}
				}
				cout << endl;
			}
			break;
		case 2:
			cout << "Enter user's 5-digit id: "; cin >> user_id;
			cout << "\nEnter LAB number: "; cin >> lab;
			cout << "\nEnter station number: "; cin >> machine;
			arr[lab - 1][machine - 1] = 0;
			for (int i = 0;i < rows;i++) {
				for (int j = 0;j < columns_per_row[i];j++) {
					if (arr[i][j] == 0) {
						cout << " EMPTY  ";
					}
					else {
						cout << arr[i][j] << "     ";
					}
				}
				cout << endl;
			}
			break;
		case 3:
			cout << "Enter user's 5-digit id: "; cin >> user_id;
			if (arr[lab - 1][machine - 1] != user_id) {
				for (int i = 0;i < rows;i++) {
					for (int j = 0;j < columns_per_row[i];j++) {
						if (arr[i][j] == 0) {
							cout << " NONE  ";
						}
						else {
							if (arr[i][j] == user_id) {
								cout << " HERE" << "     ";
							}
							else {
								cout << arr[i][j];
							}
						}
					}
					cout << endl;
				}
			}
			else {
				for (int i = 0;i < rows;i++) {
					for (int j = 0;j < columns_per_row[i];j++) {
						if (arr[i][j] == 0) {
							cout << " EMPTY  ";
						}
						else {
							if (arr[i][j] == user_id) {
								cout << " HERE" << "     ";
							}
							else {
								cout << arr[i][j];
							}
						}
					}
					cout << endl;
				}
			}
		}
	} while (selection != 4);



	return 0;
}
